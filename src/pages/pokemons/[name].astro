---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list-response";

import MainLayout from "../../layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from "@components/shared/Title.astro";

import {Icon} from 'astro-icon/components'

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map((res) => ({
    params: { name: res.name },
    props: { name: res.name, url: res.url },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/legacy/${id}.ogg`;
---

<MainLayout title="Main Layout">
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div>
      <a class="hover:text-blue-500" href="/">Regresar</a>
      <div class="flex flex-row items-center">
      <Title>{name}</Title>
      <button id="btn-favorite" data-name={name} data-id={id}>
        <Icon data-line name="heart-line" size={30} ></Icon>
        <Icon data-full class="hidden" name="heart-full" size={30}></Icon>
      </button>
      </div>
      <PokemonCard url={url} name={name} isBig />
      <audio controls class="mt-5">
        <source src={audioSrc} type="audio/ogg" />
        Your browser does not support the audio element
      </audio>
    </div>
  </section>
</MainLayout>

<style>
#btn-favorite {
  @apply hover:animate-pulse
}
</style>

<script>
  interface FavoritePokemon {
    name:string;
    id: number;
  }

  const handlePageLoad = () => {

    let favoritePokemon:FavoritePokemon[] =  JSON.parse(localStorage.getItem('favorites') ?? '[]');

    const btnFavorite = document.querySelector('#btn-favorite') as HTMLButtonElement;
    const name = btnFavorite.dataset.name ?? '';
    const id = btnFavorite.dataset.id ?? '';

    const heartLine = btnFavorite.querySelector('[data-line]') as HTMLElement;
    const heartOutline = btnFavorite.querySelector('[data-full]') as HTMLElement;

    const toggleFavorite = () =>{
      const isFavorite = favoritePokemon.some((fav) => fav.name === name);
      if (isFavorite) {
        favoritePokemon.filter(fav => fav.name !== name);
      } else {
        favoritePokemon.push({
          id: +id,
          name
        })
      }
      localStorage.setItem('favorites', JSON.stringify(favoritePokemon));
    }

    btnFavorite.addEventListener('click', () => {
      heartOutline.classList.toggle('hidden');
      heartLine.classList.toggle('hidden');
      toggleFavorite();
    })
  }

  document.addEventListener('astro:page-load', handlePageLoad);

  

</script>